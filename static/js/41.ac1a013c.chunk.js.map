{"version":3,"file":"static/js/41.ac1a013c.chunk.js","mappings":"2NAEaA,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAKvBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oIAQtBG,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qDAKxBK,EAAgBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8B,SCmBrC,EA7BqB,WACnB,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAapC,OAXAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GACJ,IAAIA,EAAKC,UAAWC,MAAMC,QAAQH,EAAKC,SAGrC,MAAM,IAAIG,MAAM,kDAFhBR,EAAgBI,EAAKC,QAGzB,IACCI,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,gCAAiCA,EAAM,GACzE,GAAG,CAACjB,KAGFmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC7B,EAAW,CAAA+B,SACTf,EAAagB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACtCC,EAAAA,EAAAA,MAACjC,EAAU,CAAA2B,SAAA,EACTM,EAAAA,EAAAA,MAAC/B,EAAY,CAAAyB,SAAA,CAAC,YAAUI,MACxBN,EAAAA,EAAAA,KAACrB,EAAa,CAAAuB,SAAEK,MAFDF,EAGJ,OAKvB,C,uJCrCA,IAAMI,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,MAAM,GAADC,OAAIJ,EAAQ,gCAAAI,OAA+BH,IAAWnB,MAChE,SAAAuB,GACE,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIrB,MAAM,kCACpBkB,EAAII,MACpB,GAEJ,EAEaC,EAAkB,SAAAtC,GAC7B,OAAO+B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAUhC,EAAO,aAAAgC,OAAYH,IAAWnB,MAAK,SAAAuB,GACnE,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIrB,MAAM,kCACpBkB,EAAII,MACpB,GACF,EAEaE,EAAkB,SAAAC,GAC7B,OAAOT,MAAM,GAADC,OACPJ,EAAQ,wBAAAI,OAAuBQ,EAAK,aAAAR,OAAYH,IACnDnB,MAAK,SAAAuB,GACL,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIrB,MAAM,kCACpBkB,EAAII,MACpB,GACF,EAEaI,EAAe,SAAAzC,GAC1B,OAAO+B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAUhC,EAAO,qBAAAgC,OAAoBH,IAAWnB,MACtE,SAAAuB,GACE,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIrB,MAAM,kCACpBkB,EAAII,MACpB,GAEJ,EAEa5B,EAAkB,SAAAT,GAC7B,OAAO+B,MAAM,GAADC,OAAIJ,EAAQ,WAAAI,OAAUhC,EAAO,qBAAAgC,OAAoBH,IAAWnB,MACtE,SAAAuB,GACE,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIrB,MAAM,kCACpBkB,EAAII,MACpB,GAEJ,C","sources":["components/MovieReview/MovieReview.styled.js","components/MovieReview/MovieReview.jsx","services/HttpMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/HttpMovies';\nimport {\n  ReviewsList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewContent,\n} from './MovieReview.styled';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        if (data.results && Array.isArray(data.results)) {\n          setMovieReviews(data.results);\n        } else\n          throw new Error(`Oops, something went wrong... Please try again`);\n      })\n      .catch(error => console.error('Error fetching movie reviews:', error));\n  }, [movieId]);\n\n  return (\n    <>\n      <ReviewsList>\n        {movieReviews.map(({ id, author, content }) => (\n          <ReviewItem key={id}>\n            <ReviewAuthor> Author: {author}</ReviewAuthor>\n            <ReviewContent>{content}</ReviewContent>\n          </ReviewItem>\n        ))}\n      </ReviewsList>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e8e18ab747b38797cae45f67fe29be94';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  ).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\n// https://api.themoviedb.org/3/movie/420818/credits?api_key=e8e18ab747b38797cae45f67fe29be94\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","ReviewAuthor","_templateObject3","ReviewContent","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","data","results","Array","isArray","Error","catch","error","console","_jsx","_Fragment","children","map","_ref","id","author","content","_jsxs","BASE_URL","API_KEY","getTrendingMovies","fetch","concat","res","status","Promise","reject","json","getMovieDetails","getMovieByQuery","query","getMovieCast"],"sourceRoot":""}