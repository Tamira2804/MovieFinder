{"version":3,"file":"static/js/696.c2d1aa46.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx","services/HttpMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\n\nexport const ActorCardWrapper = styled.li`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 10px;\n  width: 150px;\n  text-align: center;\n  transition: box-shadow 0.3s, transform 0.3s;\n\n  &:hover {\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.6);\n    transform: scale(1.1);\n  }\n`;\n\nexport const ActorImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const ActorName = styled.h4`\n  margin: 10px 0;\n`;\n\nexport const ActorRole = styled.p`\n  color: #888;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../services/HttpMovies';\nimport {\n  ActorList,\n  ActorCardWrapper,\n  ActorImage,\n  ActorName,\n  ActorRole,\n} from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(data => {\n        if (data.cast && Array.isArray(data.cast)) {\n          setMovieCast(data.cast);\n        } else\n          throw new Error(`Oops, something went wrong... Please try again`);\n      })\n      .catch(error => console.error('Error fetching movie cast:', error));\n  }, [movieId]);\n\n  //   const { name, profile_path, character } = movieCast;\n\n  return (\n    <div>\n      <ActorList>\n        {movieCast.map(({ id, profile_path, name, character }) => (\n          <ActorCardWrapper key={id}>\n            <ActorImage\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : `https://dummyimage.com/150x225&text=${name}`\n              }\n              alt={`${name} photo`}\n            />\n            <ActorName>{name}</ActorName>\n            <ActorRole>{character}</ActorRole>\n          </ActorCardWrapper>\n        ))}\n      </ActorList>\n    </div>\n  );\n};\n\nexport default MovieCast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e8e18ab747b38797cae45f67fe29be94';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  ).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\n// https://api.themoviedb.org/3/movie/420818/credits?api_key=e8e18ab747b38797cae45f67fe29be94\n"],"names":["ActorList","styled","_templateObject","_taggedTemplateLiteral","ActorCardWrapper","_templateObject2","ActorImage","_templateObject3","ActorName","_templateObject4","ActorRole","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","getMovieCast","then","data","cast","Array","isArray","Error","catch","error","console","_jsx","children","map","_ref","id","profile_path","name","character","_jsxs","src","concat","alt","BASE_URL","API_KEY","getTrendingMovies","fetch","res","status","Promise","reject","json","getMovieDetails","getMovieByQuery","query","getMovieReviews"],"sourceRoot":""}